name: Release

on:
  release:
    types: [published]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    name: Zig ${{ matrix.zig }} on ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Setup Zig
        uses: mlugg/setup-zig@v1
        with:
          version: 0.13.0
      - if: matrix.os == 'windows-latest'
        name: Build
        run: |
          zig build -Doptimize=ReleaseFast -j4
          strip zig-out/bin/filterx.exe
          tar -czf filterx-windows-x86_64.tar.gz zig-out/bin/filterx.exe

      - if: matrix.os == 'macos-latest'
        name: Build
        run: |
          zig build -Doptimize=ReleaseFast -j4
          strip zig-out/bin/filterx
          tar -czf filterx-macos-x86_64.tar.gz zig-out/bin/filterx

      - if: matrix.os == 'ubuntu-latest'
        name: Build
        run: |
          zig build -Dtarget="x86_64-linux-gnu.2.17" -Doptimize=ReleaseFast -j4 
          strip zig-out/bin/filterx
          tar -czf filterx-linux-x86_64.tar.gz zig-out/bin/filterx

      - uses: ncipollo/release-action@v1.14.0
        with:
          artifacts: "filterx-*.tar.gz"
          allowUpdates: true
          omitNameDuringUpdate: true
          omitBodyDuringUpdate: true
